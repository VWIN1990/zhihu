<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd
               ">

	<!-- scanner redis properties -->
	<context:property-placeholder location="classpath:*.properties" />

	<!-- 连接池配置 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig"
		  p:maxIdle="${redis.maxIdle}"
		  p:maxWaitMillis="${redis.maxWait}"
		  p:testOnBorrow="${redis.testOnBorrow}" />

	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		  p:hostName="${redis.host}"
		  p:port="${redis.port}"
		  p:poolConfig-ref="poolConfig"/>

	<!-- Redis模版类，用于操作redis -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		  p:connectionFactory-ref="connectionFactory">
		<!--如果不配置Serializer，那么存储的时候只能使用String，如果用User类型存储，那么会提示错误User can't cast to String！！！-->
		<!--<property name="keySerializer">-->
			<!--<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
		<!--</property>-->
		<!--<property name="valueSerializer">-->
			<!--<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />-->
		<!--</property>-->
	</bean>

</beans>